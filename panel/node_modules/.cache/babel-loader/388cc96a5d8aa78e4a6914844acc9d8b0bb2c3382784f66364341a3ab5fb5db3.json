{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ServerSettings(){const{id}=useParams();const[serverSettings,setServerSettings]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);useEffect(()=>{fetchServerSettings();},[id]);const fetchServerSettings=async()=>{try{const response=await fetch(\"/api/server/\".concat(id,\"/serversettings\"));if(!response.ok)throw new Error('Failed to fetch server settings');const data=await response.json();setServerSettings(data);}catch(error){console.error('Error fetching server settings:',error);setError('Error fetching server settings: '+error.message);}finally{setLoading(false);}};const handleSaveSettings=async e=>{e.preventDefault();try{const response=await fetch(\"/api/server/\".concat(id,\"/serversettings\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(serverSettings)});if(!response.ok)throw new Error('Failed to save server settings');const data=await response.json();setSuccess('Settings saved successfully!');}catch(error){console.error('Error saving server settings:',error);setError('Error saving server settings: '+error.message);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"page\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"page\",children:/*#__PURE__*/_jsx(\"p\",{children:error})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Server Settings\"}),success&&/*#__PURE__*/_jsx(\"p\",{className:\"success\",children:success}),serverSettings?/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSaveSettings,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Server Name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:serverSettings.name,onChange:e=>setServerSettings({...serverSettings,name:e.target.value})})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Welcome Message:\",/*#__PURE__*/_jsx(\"textarea\",{value:serverSettings.welcomeMessage,onChange:e=>setServerSettings({...serverSettings,welcomeMessage:e.target.value})})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Auto-Role:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:serverSettings.autoRole,onChange:e=>setServerSettings({...serverSettings,autoRole:e.target.value})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Save Settings\"})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No settings found\"})]});}export default ServerSettings;","map":{"version":3,"names":["React","useState","useEffect","useParams","jsx","_jsx","jsxs","_jsxs","ServerSettings","id","serverSettings","setServerSettings","loading","setLoading","error","setError","success","setSuccess","fetchServerSettings","response","fetch","concat","ok","Error","data","json","console","message","handleSaveSettings","e","preventDefault","method","headers","body","JSON","stringify","className","children","onSubmit","type","value","name","onChange","target","welcomeMessage","autoRole"],"sources":["/home/kira/panel/src/pages/ServerSettings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction ServerSettings() {\n  const { id } = useParams();\n  const [serverSettings, setServerSettings] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n\n  useEffect(() => {\n    fetchServerSettings();\n  }, [id]);\n\n  const fetchServerSettings = async () => {\n    try {\n      const response = await fetch(`/api/server/${id}/serversettings`);\n      if (!response.ok) throw new Error('Failed to fetch server settings');\n      const data = await response.json();\n      setServerSettings(data);\n    } catch (error) {\n      console.error('Error fetching server settings:', error);\n      setError('Error fetching server settings: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveSettings = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`/api/server/${id}/serversettings`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(serverSettings),\n      });\n      if (!response.ok) throw new Error('Failed to save server settings');\n      const data = await response.json();\n      setSuccess('Settings saved successfully!');\n    } catch (error) {\n      console.error('Error saving server settings:', error);\n      setError('Error saving server settings: ' + error.message);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"page\"><p>Loading...</p></div>;\n  }\n\n  if (error) {\n    return <div className=\"page\"><p>{error}</p></div>;\n  }\n\n  return (\n    <div className=\"page\">\n      <h1>Server Settings</h1>\n      {success && <p className=\"success\">{success}</p>}\n      {serverSettings ? (\n        <form onSubmit={handleSaveSettings}>\n          <label>\n            Server Name:\n            <input\n              type=\"text\"\n              value={serverSettings.name}\n              onChange={(e) => setServerSettings({ ...serverSettings, name: e.target.value })}\n            />\n          </label>\n          <label>\n            Welcome Message:\n            <textarea\n              value={serverSettings.welcomeMessage}\n              onChange={(e) => setServerSettings({ ...serverSettings, welcomeMessage: e.target.value })}\n            />\n          </label>\n          <label>\n            Auto-Role:\n            <input\n              type=\"text\"\n              value={serverSettings.autoRole}\n              onChange={(e) => setServerSettings({ ...serverSettings, autoRole: e.target.value })}\n            />\n          </label>\n          {/* Add more settings fields as needed */}\n          <button type=\"submit\">Save Settings</button>\n        </form>\n      ) : (\n        <p>No settings found</p>\n      )}\n    </div>\n  );\n}\n\nexport default ServerSettings;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7C,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACxB,KAAM,CAAEC,EAAG,CAAC,CAAGN,SAAS,CAAC,CAAC,CAC1B,KAAM,CAACO,cAAc,CAAEC,iBAAiB,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACdgB,mBAAmB,CAAC,CAAC,CACvB,CAAC,CAAE,CAACT,EAAE,CAAC,CAAC,CAER,KAAM,CAAAS,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,gBAAAC,MAAA,CAAgBZ,EAAE,mBAAiB,CAAC,CAChE,GAAI,CAACU,QAAQ,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,iCAAiC,CAAC,CACpE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClCd,iBAAiB,CAACa,IAAI,CAAC,CACzB,CAAE,MAAOV,KAAK,CAAE,CACdY,OAAO,CAACZ,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvDC,QAAQ,CAAC,kCAAkC,CAAGD,KAAK,CAACa,OAAO,CAAC,CAC9D,CAAC,OAAS,CACRd,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAe,kBAAkB,CAAG,KAAO,CAAAC,CAAC,EAAK,CACtCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAX,QAAQ,CAAG,KAAM,CAAAC,KAAK,gBAAAC,MAAA,CAAgBZ,EAAE,oBAAmB,CAC/DsB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACzB,cAAc,CACrC,CAAC,CAAC,CACF,GAAI,CAACS,QAAQ,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,gCAAgC,CAAC,CACnE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClCR,UAAU,CAAC,8BAA8B,CAAC,CAC5C,CAAE,MAAOH,KAAK,CAAE,CACdY,OAAO,CAACZ,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrDC,QAAQ,CAAC,gCAAgC,CAAGD,KAAK,CAACa,OAAO,CAAC,CAC5D,CACF,CAAC,CAED,GAAIf,OAAO,CAAE,CACX,mBAAOP,IAAA,QAAK+B,SAAS,CAAC,MAAM,CAAAC,QAAA,cAAChC,IAAA,MAAAgC,QAAA,CAAG,YAAU,CAAG,CAAC,CAAK,CAAC,CACtD,CAEA,GAAIvB,KAAK,CAAE,CACT,mBAAOT,IAAA,QAAK+B,SAAS,CAAC,MAAM,CAAAC,QAAA,cAAChC,IAAA,MAAAgC,QAAA,CAAIvB,KAAK,CAAI,CAAC,CAAK,CAAC,CACnD,CAEA,mBACEP,KAAA,QAAK6B,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBhC,IAAA,OAAAgC,QAAA,CAAI,iBAAe,CAAI,CAAC,CACvBrB,OAAO,eAAIX,IAAA,MAAG+B,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAErB,OAAO,CAAI,CAAC,CAC/CN,cAAc,cACbH,KAAA,SAAM+B,QAAQ,CAAEV,kBAAmB,CAAAS,QAAA,eACjC9B,KAAA,UAAA8B,QAAA,EAAO,cAEL,cAAAhC,IAAA,UACEkC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE9B,cAAc,CAAC+B,IAAK,CAC3BC,QAAQ,CAAGb,CAAC,EAAKlB,iBAAiB,CAAC,CAAE,GAAGD,cAAc,CAAE+B,IAAI,CAAEZ,CAAC,CAACc,MAAM,CAACH,KAAM,CAAC,CAAE,CACjF,CAAC,EACG,CAAC,cACRjC,KAAA,UAAA8B,QAAA,EAAO,kBAEL,cAAAhC,IAAA,aACEmC,KAAK,CAAE9B,cAAc,CAACkC,cAAe,CACrCF,QAAQ,CAAGb,CAAC,EAAKlB,iBAAiB,CAAC,CAAE,GAAGD,cAAc,CAAEkC,cAAc,CAAEf,CAAC,CAACc,MAAM,CAACH,KAAM,CAAC,CAAE,CAC3F,CAAC,EACG,CAAC,cACRjC,KAAA,UAAA8B,QAAA,EAAO,YAEL,cAAAhC,IAAA,UACEkC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE9B,cAAc,CAACmC,QAAS,CAC/BH,QAAQ,CAAGb,CAAC,EAAKlB,iBAAiB,CAAC,CAAE,GAAGD,cAAc,CAAEmC,QAAQ,CAAEhB,CAAC,CAACc,MAAM,CAACH,KAAM,CAAC,CAAE,CACrF,CAAC,EACG,CAAC,cAERnC,IAAA,WAAQkC,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,eAAa,CAAQ,CAAC,EACxC,CAAC,cAEPhC,IAAA,MAAAgC,QAAA,CAAG,mBAAiB,CAAG,CACxB,EACE,CAAC,CAEV,CAEA,cAAe,CAAA7B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}