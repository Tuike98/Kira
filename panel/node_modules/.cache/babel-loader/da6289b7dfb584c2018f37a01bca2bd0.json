{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ServerSettings(){const{id}=useParams();const[serverSettings,setServerSettings]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{fetchServerSettings();},[id]);const fetchServerSettings=async()=>{try{const response=await fetch(\"/api/server/\".concat(id,\"/settings\"));if(!response.ok)throw new Error('Failed to fetch server settings');const data=await response.json();setServerSettings(data);}catch(error){console.error('Error fetching server settings:',error);setError('Error fetching server settings: '+error.message);}finally{setLoading(false);}};const handleSaveSettings=async()=>{// Implement save logic here\n};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"page\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"page\",children:/*#__PURE__*/_jsx(\"p\",{children:error})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Server Settings\"}),serverSettings?/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSaveSettings,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Server Name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:serverSettings.name,onChange:e=>setServerSettings({...serverSettings,name:e.target.value})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Save Settings\"})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No settings found\"})]});}export default ServerSettings;","map":{"version":3,"names":["React","useState","useEffect","useParams","jsx","_jsx","jsxs","_jsxs","ServerSettings","id","serverSettings","setServerSettings","loading","setLoading","error","setError","fetchServerSettings","response","fetch","concat","ok","Error","data","json","console","message","handleSaveSettings","className","children","onSubmit","type","value","name","onChange","e","target"],"sources":["/home/kira/panel/src/pages/ServerSettings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction ServerSettings() {\n  const { id } = useParams();\n  const [serverSettings, setServerSettings] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchServerSettings();\n  }, [id]);\n\n  const fetchServerSettings = async () => {\n    try {\n      const response = await fetch(`/api/server/${id}/settings`);\n      if (!response.ok) throw new Error('Failed to fetch server settings');\n      const data = await response.json();\n      setServerSettings(data);\n    } catch (error) {\n      console.error('Error fetching server settings:', error);\n      setError('Error fetching server settings: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveSettings = async () => {\n    // Implement save logic here\n  };\n\n  if (loading) {\n    return <div className=\"page\"><p>Loading...</p></div>;\n  }\n\n  if (error) {\n    return <div className=\"page\"><p>{error}</p></div>;\n  }\n\n  return (\n    <div className=\"page\">\n      <h1>Server Settings</h1>\n      {serverSettings ? (\n        <form onSubmit={handleSaveSettings}>\n          <label>\n            Server Name:\n            <input type=\"text\" value={serverSettings.name} onChange={(e) => setServerSettings({ ...serverSettings, name: e.target.value })} />\n          </label>\n          {/* Add more settings fields as needed */}\n          <button type=\"submit\">Save Settings</button>\n        </form>\n      ) : (\n        <p>No settings found</p>\n      )}\n    </div>\n  );\n}\n\nexport default ServerSettings;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7C,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACxB,KAAM,CAAEC,EAAG,CAAC,CAAGN,SAAS,CAAC,CAAC,CAC1B,KAAM,CAACO,cAAc,CAAEC,iBAAiB,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACdc,mBAAmB,CAAC,CAAC,CACvB,CAAC,CAAE,CAACP,EAAE,CAAC,CAAC,CAER,KAAM,CAAAO,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,gBAAAC,MAAA,CAAgBV,EAAE,aAAW,CAAC,CAC1D,GAAI,CAACQ,QAAQ,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,iCAAiC,CAAC,CACpE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClCZ,iBAAiB,CAACW,IAAI,CAAC,CACzB,CAAE,MAAOR,KAAK,CAAE,CACdU,OAAO,CAACV,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvDC,QAAQ,CAAC,kCAAkC,CAAGD,KAAK,CAACW,OAAO,CAAC,CAC9D,CAAC,OAAS,CACRZ,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAa,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC;AAAA,CACD,CAED,GAAId,OAAO,CAAE,CACX,mBAAOP,IAAA,QAAKsB,SAAS,CAAC,MAAM,CAAAC,QAAA,cAACvB,IAAA,MAAAuB,QAAA,CAAG,YAAU,CAAG,CAAC,CAAK,CAAC,CACtD,CAEA,GAAId,KAAK,CAAE,CACT,mBAAOT,IAAA,QAAKsB,SAAS,CAAC,MAAM,CAAAC,QAAA,cAACvB,IAAA,MAAAuB,QAAA,CAAId,KAAK,CAAI,CAAC,CAAK,CAAC,CACnD,CAEA,mBACEP,KAAA,QAAKoB,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBvB,IAAA,OAAAuB,QAAA,CAAI,iBAAe,CAAI,CAAC,CACvBlB,cAAc,cACbH,KAAA,SAAMsB,QAAQ,CAAEH,kBAAmB,CAAAE,QAAA,eACjCrB,KAAA,UAAAqB,QAAA,EAAO,cAEL,cAAAvB,IAAA,UAAOyB,IAAI,CAAC,MAAM,CAACC,KAAK,CAAErB,cAAc,CAACsB,IAAK,CAACC,QAAQ,CAAGC,CAAC,EAAKvB,iBAAiB,CAAC,CAAE,GAAGD,cAAc,CAAEsB,IAAI,CAAEE,CAAC,CAACC,MAAM,CAACJ,KAAM,CAAC,CAAE,CAAE,CAAC,EAC7H,CAAC,cAER1B,IAAA,WAAQyB,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,eAAa,CAAQ,CAAC,EACxC,CAAC,cAEPvB,IAAA,MAAAuB,QAAA,CAAG,mBAAiB,CAAG,CACxB,EACE,CAAC,CAEV,CAEA,cAAe,CAAApB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}