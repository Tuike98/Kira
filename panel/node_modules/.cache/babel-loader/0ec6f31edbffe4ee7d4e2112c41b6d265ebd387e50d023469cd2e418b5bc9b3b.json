{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import MessageForm from'../components/MessageForm';import Menu from'../components/Menu';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Dashboard(){const{id}=useParams();const[server,setServer]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[channels,setChannels]=useState([]);const[selectedChannel,setSelectedChannel]=useState('');const[history,setHistory]=useState([]);useEffect(()=>{fetchServerDetails();fetchChannels();},[id]);const fetchServerDetails=async()=>{try{const response=await fetch(\"/api/server/\".concat(id));if(!response.ok)throw new Error('Failed to fetch server details');const data=await response.json();setServer(data);}catch(error){console.error('Error fetching server details:',error);setError('Error fetching server details: '+error.message);}finally{setLoading(false);}};const fetchChannels=async()=>{try{const response=await fetch(\"/api/server/\".concat(id,\"/channels\"));if(!response.ok)throw new Error('Failed to fetch channels');const data=await response.json();setChannels(data);if(data.length>0){setSelectedChannel(data[0].id);}}catch(error){console.error('Error fetching channels:',error);setError('Error fetching channels: '+error.message);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"page\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"page\",children:/*#__PURE__*/_jsx(\"p\",{children:error})});}return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"page\",children:server?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:server.name}),/*#__PURE__*/_jsx(\"img\",{src:server.icon,alt:\"\".concat(server.name,\" icon\"),width:\"100\",height:\"100\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Members: \",server.memberCount]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Owner ID: \",server.ownerID]}),server.license?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"License Key: \",server.license.key]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Expires At: \",new Date(server.license.expiresAt).toLocaleString()]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"No active license\"}),/*#__PURE__*/_jsx(MessageForm,{channels:channels,selectedChannel:selectedChannel,setSelectedChannel:setSelectedChannel,setHistory:setHistory,history:history}),/*#__PURE__*/_jsx(Menu,{serverId:id,channels:channels,selectedChannel:selectedChannel,setSelectedChannel:setSelectedChannel})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Server not found\"})})});}export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useParams","MessageForm","Menu","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Dashboard","id","server","setServer","loading","setLoading","error","setError","channels","setChannels","selectedChannel","setSelectedChannel","history","setHistory","fetchServerDetails","fetchChannels","response","fetch","concat","ok","Error","data","json","console","message","length","className","children","name","src","icon","alt","width","height","memberCount","ownerID","license","key","Date","expiresAt","toLocaleString","serverId"],"sources":["/home/kira/panel/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MessageForm from '../components/MessageForm';\nimport Menu from '../components/Menu';\n\nfunction Dashboard() {\n  const { id } = useParams();\n  const [server, setServer] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [channels, setChannels] = useState([]);\n  const [selectedChannel, setSelectedChannel] = useState('');\n  const [history, setHistory] = useState([]);\n\n  useEffect(() => {\n    fetchServerDetails();\n    fetchChannels();\n  }, [id]);\n\n  const fetchServerDetails = async () => {\n    try {\n      const response = await fetch(`/api/server/${id}`);\n      if (!response.ok) throw new Error('Failed to fetch server details');\n      const data = await response.json();\n      setServer(data);\n    } catch (error) {\n      console.error('Error fetching server details:', error);\n      setError('Error fetching server details: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchChannels = async () => {\n    try {\n      const response = await fetch(`/api/server/${id}/channels`);\n      if (!response.ok) throw new Error('Failed to fetch channels');\n      const data = await response.json();\n      setChannels(data);\n      if (data.length > 0) {\n        setSelectedChannel(data[0].id);\n      }\n    } catch (error) {\n      console.error('Error fetching channels:', error);\n      setError('Error fetching channels: ' + error.message);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"page\"><p>Loading...</p></div>;\n  }\n\n  if (error) {\n    return <div className=\"page\"><p>{error}</p></div>;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"page\">\n        {server ? (\n          <>\n            <h1>{server.name}</h1>\n            <img src={server.icon} alt={`${server.name} icon`} width=\"100\" height=\"100\" />\n            <p>Members: {server.memberCount}</p>\n            <p>Owner ID: {server.ownerID}</p>\n            {server.license ? (\n              <>\n                <p>License Key: {server.license.key}</p>\n                <p>Expires At: {new Date(server.license.expiresAt).toLocaleString()}</p>\n              </>\n            ) : (\n              <p>No active license</p>\n            )}\n            <MessageForm \n              channels={channels}\n              selectedChannel={selectedChannel}\n              setSelectedChannel={setSelectedChannel}\n              setHistory={setHistory}\n              history={history}\n            />\n            <Menu serverId={id} channels={channels} selectedChannel={selectedChannel} setSelectedChannel={setSelectedChannel} />\n          </>\n        ) : (\n          <p>Server not found</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}