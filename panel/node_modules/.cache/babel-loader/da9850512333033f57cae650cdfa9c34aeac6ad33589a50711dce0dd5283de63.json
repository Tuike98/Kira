{"ast":null,"code":"// src/components/MenuForm.js\nimport React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MenuForm(_ref){let{channels,selectedChannel,setSelectedChannel}=_ref;const[menuItems,setMenuItems]=useState([]);const[menuItemLabel,setMenuItemLabel]=useState('');const[menuItemMessage,setMenuItemMessage]=useState('');const[menuType,setMenuType]=useState('normal');const[selectedMessage,setSelectedMessage]=useState('');const handleAddMenuItem=()=>{if(menuItemLabel&&menuItemMessage){setMenuItems([...menuItems,{label:menuItemLabel,message:menuItemMessage}]);setMenuItemLabel('');setMenuItemMessage('');}};const handleCreateMenu=async()=>{try{const response=await fetch(\"/api/server/\".concat(selectedChannel,\"/message\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({channelId:selectedChannel,message:selectedMessage,menuType,menuItems})});if(!response.ok)throw new Error('Failed to create menu');alert('Menu created successfully');}catch(error){console.error('Error creating menu:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h2\",{onClick:()=>document.getElementById('menuSection').classList.toggle('hidden'),children:\"Create Menu\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"menuSection\",className:\"hidden\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Channel:\",/*#__PURE__*/_jsx(\"select\",{value:selectedChannel,onChange:e=>setSelectedChannel(e.target.value),children:channels.map(channel=>/*#__PURE__*/_jsx(\"option\",{value:channel.id,children:channel.name},channel.id))})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Message:\",/*#__PURE__*/_jsx(\"textarea\",{value:selectedMessage,onChange:e=>setSelectedMessage(e.target.value),placeholder:\"Enter the message for the menu\"})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Menu Type:\",/*#__PURE__*/_jsxs(\"select\",{value:menuType,onChange:e=>setMenuType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"normal\",children:\"Normal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"dropdown\",children:\"Dropdown\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:menuItemLabel,onChange:e=>setMenuItemLabel(e.target.value),placeholder:\"Menu Item Label\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:menuItemMessage,onChange:e=>setMenuItemMessage(e.target.value),placeholder:\"Menu Item Message\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddMenuItem,children:\"Add Menu Item\"})]}),/*#__PURE__*/_jsx(\"ul\",{children:menuItems.map((item,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[item.label,\" - \",item.message]},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCreateMenu,children:\"Create Menu\"})]})]});}export default MenuForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","MenuForm","_ref","channels","selectedChannel","setSelectedChannel","menuItems","setMenuItems","menuItemLabel","setMenuItemLabel","menuItemMessage","setMenuItemMessage","menuType","setMenuType","selectedMessage","setSelectedMessage","handleAddMenuItem","label","message","handleCreateMenu","response","fetch","concat","method","headers","body","JSON","stringify","channelId","ok","Error","alert","error","console","className","children","onClick","document","getElementById","classList","toggle","id","value","onChange","e","target","map","channel","name","placeholder","type","item","index"],"sources":["/home/kira/panel/src/components/MenuForm.js"],"sourcesContent":["// src/components/MenuForm.js\nimport React, { useState } from 'react';\n\nfunction MenuForm({ channels, selectedChannel, setSelectedChannel }) {\n  const [menuItems, setMenuItems] = useState([]);\n  const [menuItemLabel, setMenuItemLabel] = useState('');\n  const [menuItemMessage, setMenuItemMessage] = useState('');\n  const [menuType, setMenuType] = useState('normal');\n  const [selectedMessage, setSelectedMessage] = useState('');\n\n  const handleAddMenuItem = () => {\n    if (menuItemLabel && menuItemMessage) {\n      setMenuItems([...menuItems, { label: menuItemLabel, message: menuItemMessage }]);\n      setMenuItemLabel('');\n      setMenuItemMessage('');\n    }\n  };\n\n  const handleCreateMenu = async () => {\n    try {\n      const response = await fetch(`/api/server/${selectedChannel}/message`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          channelId: selectedChannel,\n          message: selectedMessage,\n          menuType,\n          menuItems,\n        }),\n      });\n      if (!response.ok) throw new Error('Failed to create menu');\n      alert('Menu created successfully');\n    } catch (error) {\n      console.error('Error creating menu:', error);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h2 onClick={() => document.getElementById('menuSection').classList.toggle('hidden')}>Create Menu</h2>\n      <div id=\"menuSection\" className=\"hidden\">\n        <label>\n          Select Channel:\n          <select value={selectedChannel} onChange={(e) => setSelectedChannel(e.target.value)}>\n            {channels.map(channel => (\n              <option key={channel.id} value={channel.id}>{channel.name}</option>\n            ))}\n          </select>\n        </label>\n        <label>\n          Select Message:\n          <textarea\n            value={selectedMessage}\n            onChange={(e) => setSelectedMessage(e.target.value)}\n            placeholder=\"Enter the message for the menu\"\n          />\n        </label>\n        <label>\n          Menu Type:\n          <select value={menuType} onChange={(e) => setMenuType(e.target.value)}>\n            <option value=\"normal\">Normal</option>\n            <option value=\"dropdown\">Dropdown</option>\n          </select>\n        </label>\n        <div>\n          <input\n            type=\"text\"\n            value={menuItemLabel}\n            onChange={(e) => setMenuItemLabel(e.target.value)}\n            placeholder=\"Menu Item Label\"\n          />\n          <input\n            type=\"text\"\n            value={menuItemMessage}\n            onChange={(e) => setMenuItemMessage(e.target.value)}\n            placeholder=\"Menu Item Message\"\n          />\n          <button onClick={handleAddMenuItem}>Add Menu Item</button>\n        </div>\n        <ul>\n          {menuItems.map((item, index) => (\n            <li key={index}>{item.label} - {item.message}</li>\n          ))}\n        </ul>\n        <button onClick={handleCreateMenu}>Create Menu</button>\n      </div>\n    </div>\n  );\n}\n\nexport default MenuForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}